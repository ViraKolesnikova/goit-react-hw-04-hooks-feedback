{"version":3,"sources":["components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css","components/Section/Section.js","components/Statistics/Statistics .js","components/FeedbackOptions/FeedbackOptions.js","components/Notification/Notification.js","App.js","index.js"],"names":["module","exports","Section","title","children","className","styles","section","Statistics","feedbacks","total","positivePercentage","Object","keys","map","elem","statisticsItem","itemText","FeedbackOptions","options","onLeaveFeedback","list","name","item","type","onClick","optionBtn","Notification","message","App","useState","good","setGood","neutral","setNeutral","bad","setBad","percentage","feedbackType","Math","round","CountFeedbackPercentage","e","optionName","prevState","updateFeedback","target","textContent","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2IACAA,EAAOC,QAAU,CAAC,eAAiB,mCAAmC,SAAW,+B,gBCAjFD,EAAOC,QAAU,CAAC,KAAO,8BAA8B,KAAO,8BAA8B,UAAY,qC,kBCAxGD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,yB,sICG9C,SAASC,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,0BAASC,UAAWC,IAAOC,QAA3B,UACE,oBAAIF,UAAWC,IAAOH,MAAtB,SAA8BA,IAC7BC,K,oBCJQ,SAASI,EAAT,GAA+D,IAAzCC,EAAwC,EAAxCA,UAAWC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBACrD,OACE,qCACE,6BACGC,OAAOC,KAAKJ,GAAWK,KAAI,SAAAC,GAAI,OAC9B,qBAAeV,UAAWC,IAAOU,eAAjC,UACE,oBAAGX,UAAWC,IAAOW,SAArB,UAAgCF,EAAhC,OACA,+BAAON,EAAUM,OAFVA,QAMb,+BACE,qBAAIV,UAAWC,IAAOU,eAAtB,UACE,mBAAGX,UAAWC,IAAOW,SAArB,oBACA,+BAAOP,OAET,qBAAIL,UAAWC,IAAOU,eAAtB,UACE,mBAAGX,UAAWC,IAAOW,SAArB,gCACA,+BAAON,a,oBClBF,SAASO,EAAT,GAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBACjD,OAAO,oBAAIf,UAAYC,IAAOe,KAAvB,SACJT,OAAOC,KAAKM,GAASL,KAAI,SAAAQ,GACxB,OAAO,oBAAejB,UAAYC,IAAOiB,KAAlC,SACL,wBAASC,KAAK,SAASC,QAASL,EAAiBf,UAAYC,IAAOoB,UAApE,SACGJ,KAFWA,QCLP,SAASK,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OAAO,4BAAKA,ICKC,SAASC,IACtB,MAAwBC,mBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA8BF,mBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAAsBJ,mBAAS,GAA/B,mBAAOK,EAAP,KAAYC,EAAZ,KAEMjB,EAAU,CAACY,OAAME,UAASE,OAyB1BzB,EAAQqB,EAAOE,EAAUE,EACzBE,EARwB,SAAC3B,EAAO4B,GACtC,OAAc,IAAV5B,EACK,KAEF6B,KAAKC,MAAOF,EAAe5B,EAAS,KAAO,IAIjC+B,CAAwB/B,EAAOqB,GAEhD,OACE,qCACE,cAAC7B,EAAD,CAASC,MAAO,wBAAhB,SACE,cAACe,EAAD,CAAiBC,QAASA,EAASC,gBAAiB,SAAAsB,GAAC,OA7BpC,SAAAC,GACrB,OAAQA,GACN,IAAK,OACHX,GAAQ,SAAAY,GAAS,OAAIA,EAAY,KACjC,MACF,IAAK,UACHV,GAAW,SAAAU,GAAS,OAAIA,EAAY,KACpC,MACF,IAAK,MACHR,GAAO,SAAAQ,GAAS,OAAIA,EAAY,KAChC,MACF,QACE,QAiBuDC,CAAeH,EAAEI,OAAOC,kBAEjF,cAAC7C,EAAD,CAASC,MAAO,aAAhB,SACGO,EAAQ,EACP,cAACF,EAAD,CACEC,UAAWU,EACXT,MAAOA,EACPC,mBAAoB0B,IAGtB,cAACV,EAAD,CAAcC,QAAQ,qCChDhCoB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACrB,EAAD,MAEFsB,SAASC,eAAe,W","file":"static/js/main.40434fcf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statisticsItem\":\"Statistics_statisticsItem__1Fehu\",\"itemText\":\"Statistics_itemText__15cJ9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"FeedbackOptions_list__qXIDc\",\"item\":\"FeedbackOptions_item__3no7m\",\"optionBtn\":\"FeedbackOptions_optionBtn__3o7dY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__15Z5A\",\"title\":\"Section_title__1G91O\"};","import PropTypes from 'prop-types';\r\n\r\nimport styles from './Section.module.css'\r\n\r\nexport default function Section({ title, children }) {\r\n  return (\r\n    <section className={styles.section}>\r\n      <h2 className={styles.title}>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired\r\n}","import PropTypes from 'prop-types';\r\n\r\nimport styles from './Statistics.module.css';\r\n\r\nexport default function Statistics({ feedbacks, total, positivePercentage }) {\r\n  return (\r\n    <>\r\n      <ul>\r\n        {Object.keys(feedbacks).map(elem => (\r\n          <li key={elem} className={styles.statisticsItem}>\r\n            <p className={styles.itemText}>{elem}:</p>\r\n            <span>{feedbacks[elem]}</span>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <ul>\r\n        <li className={styles.statisticsItem}>\r\n          <p className={styles.itemText}>Total:</p>\r\n          <span>{total}</span>\r\n        </li>\r\n        <li className={styles.statisticsItem}>\r\n          <p className={styles.itemText}>Positive feedback:</p>\r\n          <span>{positivePercentage}</span>\r\n        </li>\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  feedbacks: PropTypes.shape({\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n  }),\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.string.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\n\r\nimport styles from './FeedbackOptions.module.css' \r\n\r\nexport default function FeedbackOptions({ options, onLeaveFeedback }) {\r\n  return <ul className= {styles.list}>\r\n    {Object.keys(options).map(name => {\r\n      return <li key={name} className= {styles.item}>\r\n        <button  type=\"button\" onClick={onLeaveFeedback} className= {styles.optionBtn}>\r\n          {name}\r\n        </button>\r\n      </li>\r\n    })}\r\n  </ul>  \r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.object.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\n\r\nexport default function Notification({ message }) {\r\n  return <p>{ message}</p>\r\n}\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n}","import React, { useState } from 'react';\n\nimport Section from './components/Section';\nimport Statistics from './components/Statistics';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Notification from './components/Notification';\n\n\nexport default function App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const options = {good, neutral, bad};\n\n  const updateFeedback = optionName => {\n    switch (optionName) {\n      case 'good':\n        setGood(prevState => prevState + 1);\n        break;\n      case 'neutral':\n        setNeutral(prevState => prevState + 1);\n        break;\n      case 'bad':\n        setBad(prevState => prevState + 1);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const CountFeedbackPercentage=(total, feedbackType)=>{\n  if (total === 0) {\n    return '0%';\n  }\n  return Math.round((feedbackType / total) * 100) + '%';\n}\n\n  const total = good + neutral + bad;\n  const percentage=CountFeedbackPercentage(total, good);\n\n  return (\n    <>\n      <Section title={'Please leave feedback'}>\n        <FeedbackOptions options={options} onLeaveFeedback={e=>updateFeedback(e.target.textContent)} />\n      </Section>\n      <Section title={'Statistics'}>\n        {total > 0 ? (\n          <Statistics\n            feedbacks={options}\n            total={total}\n            positivePercentage={percentage}\n          />\n        ) : (\n          <Notification message=\"There is no feedback yet...\" />\n        )}\n      </Section>\n    </>\n  );\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}